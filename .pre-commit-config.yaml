# Fichero configuracion pre-commit para python>=3.8
repos:
  - repo: local
    hooks:
      # Pre commit hooks https://github.com/pre-commit/pre-commit-hooks
      - id: check-added-large-files
        name: check for added large files
        description: prevents giant files from being committed.
        entry: check-added-large-files
        language: system
        args: ['--maxkb=128']
        stages: [pre-commit, manual]
      - id: check-yaml
        name: check yaml
        description: checks yaml files for parseable syntax.
        entry: check-yaml
        language: system
        types: [yaml]
        stages: [pre-commit, manual]
      - id: check-toml
        name: check toml
        description: checks toml files for parseable syntax.
        entry: check-toml
        language: system
        types: [toml]
        stages: [pre-commit, manual]
      - id: end-of-file-fixer
        name: fix end of files
        description: ensures that a file is either empty, or ends with one newline.
        entry: end-of-file-fixer
        language: system
        types: [python]
        exclude: ^data/mlruns/
        stages: [pre-commit, manual]
      - id: trailing-whitespace
        name: trim trailing whitespace
        description: trims trailing whitespace.
        entry: trailing-whitespace-fixer
        language: system
        types: [text]
        exclude: ^data/mlruns/
        stages: [pre-commit, manual]
      # Ruff hooks https://github.com/astral-sh/ruff-pre-commit
      - id: ruff # Linter
        name: ruff
        description: "Run 'ruff' for extremely fast Python linting"
        entry: ruff check --force-exclude
        language: system
        require_serial: true
        types_or: [ python, pyi ]
        args: [ --fix]
        stages: [pre-commit, manual]
      - id: ruff-format # Formatter
        name: ruff-format
        description: "Run 'ruff format' for extremely fast Python formatting"
        entry: ruff format --force-exclude
        language: system
        exclude:
          '^(docs/|notebooks/demo_custom_argparse/)'
        types_or: [ python, pyi, jupyter ]
        require_serial: true
        stages: [pre-commit, manual]
      # Numpy docstrings https://github.com/numpy/numpydoc
      - id: numpydoc-validation
        name: numpydoc-validation
        description: This hook validates that docstrings in committed files adhere to numpydoc standards.
        entry: python -m numpydoc.hooks.validate_docstrings
        require_serial: true
        language: system
        exclude:
          '^(docs/|notebooks/demo_custom_argparse/)'
        types: [python]
        stages: [pre-commit, manual]
      # Static type checker https://github.com/pre-commit/mirrors-mypy
      - id: mypy
        name: mypy
        description: 'Mypy'
        entry: mypy
        language: system
        exclude:
          '^(templates/|docs/)'
        'types_or': [python, pyi]
        args:
          [
            --ignore-missing-imports,
            --install-types,
            --non-interactive,
            --explicit-package-bases,
          ]
        require_serial: true
        stages: [pre-commit, manual]
      # Dead code https://github.com/jendrikseipp/vulture
      - id: vulture
        name: vulture
        description: Find unused Python code.
        entry: vulture
        args: [".", --min-confidence, "100"]
        language: system
        pass_filenames: false
        require_serial: true
        stages: [pre-commit, manual]
      # Conventional commits https://github.com/commitizen-tools/commitizen
      - id: commitizen
        name: commitizen check
        entry: cz check
        args: [--allow-abort, --commit-msg-file]
        stages: [commit-msg]
        language: system
      - id: commitizen-branch # Conventional branch naming
        name: commitizen check branch
        description: >
          Check all commit messages that are already on the current branch but not the
          default branch on the origin repository. Useful for checking messages after
          the fact (e.g., pre-push or in CI) without an expensive check of the entire
          repository history.
        entry: cz check
        language: system
        args: [--rev-range, origin/HEAD..HEAD]
        always_run: true
        pass_filenames: false
        stages: [pre-push]
      # Strip notebook outputs https://github.com/kynan/nbstripout
      - id: nbstripout
        types: [jupyter]
        name: strip notebooks outputs
        entry: nbstripout
        language: system
        pass_filenames: true
        stages: [pre-commit, manual]

